name: Deployment Grm Seller Web
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest # Or other suitable runner environment
    strategy:
      matrix:
        node-version: [20] # Specify Node.js versions to test against

    steps:
      - uses: actions/checkout@v4 # Checkout your repository code

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10 # Specify the pnpm version to install

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm' # Enable caching for pnpm dependencies

      - name: Install dependencies
        run: pnpm install

      - name: Build project (example)
        run: pnpm build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploying to server...
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            echo "üöÄ Starting deployment on server..."

            # Ensure pnpm and Node.js paths are available
            export PATH="$HOME/.local/share/pnpm:$PATH"
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            cd /home/grm/grm-admin

            # Get latest changes
            git stash
            git pull origin main

            # If pnpm not installed, install it
            if ! command -v pnpm &> /dev/null
            then
              echo "‚öôÔ∏è Installing pnpm..."
              curl -fsSL https://get.pnpm.io/install.sh | bash -
              export PATH="$HOME/.local/share/pnpm:$PATH"
            fi

            # If node not installed, install it via nvm
            if ! command -v node &> /dev/null
            then
              echo "‚öôÔ∏è Installing Node.js via nvm..."
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm install 20
            fi

            # Confirm versions
            echo "üì¶ Versions:"
            node -v
            pnpm -v

            # Install dependencies & build
            pnpm install --frozen-lockfile
            pnpm run build

            echo "‚úÖ Build completed successfully!"
