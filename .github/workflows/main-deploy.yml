name: Build Image And Push Images to Container registry


on:
  push:
    branches:
      - 'main'
env:
  BASE_IMAGE: ghcr.io/Getteruz/new-Grm-Front
  TAG: ghcr.io/Getteruz/new-Grm-Front:${{ github.sha }}
  CONTAINER_NAME: admin-ui
  REGISTRY: ghcr.io
jobs:
  build-image-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
    #   - name: "Setup Configurations"
    #     run: mv .env.prod .env
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TAG }}
          cache-from: type=registry,ref=${{ env.BASE_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.BASE_IMAGE }}:buildcache,mode=max
  deploy-to-server:
    needs: build-image-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Pull Image and run
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo  ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
            docker pull ${{ env.TAG }}
            docker container stop ${{ env.CONTAINER_NAME }} > /dev/null
            docker container rm -f ${{ env.CONTAINER_NAME }}  > /dev/null
            docker run -d -p 45321:80 --name ${{ env.CONTAINER_NAME }} --restart=always ${{ env.TAG }} 